// Place your settings in this file to overwrite the default settings
{
  "editor.tabSize": 2,
  "editor.fontSize": 16,
  "editor.lineNumbers": "relative",
  "editor.fontLigatures": true,
  "editor.fontFamily": "FiraCode Nerd Font",
  "emmet.includeLanguages": {
    "javascript": "javascriptreact",
    "edge": "html"
  },
  "vim.statusBarColorControl": true,
  "vim.statusBarColors.normal": ["#98fb98", "#000"],
  "vim.statusBarColors.insert": ["#BF616A", "#000"],
  "vim.statusBarColors.visual": ["#B48EAD", "#000"],
  "vim.statusBarColors.visualline": "#B48EAD",
  "vim.statusBarColors.visualblock": "#A3BE8C",
  "vim.statusBarColors.replace": "#D08770",
  "vim.statusBarColors.commandlineinprogress": ["#007ACC", "#fff"],
  "vim.statusBarColors.searchinprogressmode": "#007ACC",
  "vim.statusBarColors.easymotionmode": "#007ACC",
  "vim.statusBarColors.easymotioninputmode": "#007ACC",
  "vim.statusBarColors.surroundinputmode": "#007ACC",
  "vim.neovimPath": "/usr/local/bin/nvim",
  "vim.showcmd": true,
  "vim.enableNeovim": true,
  "vim.useSystemClipboard": true,
  "vim.changeWordIncludesWhitespace": true,
  "vim.leader": ",",
  "vim.surround": true,
  "vim.vimrc.enable": true,
  "vim.normalModeKeyBindings": [
    {
      "before": ["<leader>", "n", "t"],
      "after": [],
      "commands": [
        {
          "command": "workbench.action.toggleSidebarVisibility",
          "args": []
        }
      ]
    },
    {
      "before": ["<leader>", "m"],
      "after": [],
      "commands": [
        {
          "command": "workbench.action.quickOpen",
          "args": []
        }
      ]
    },
    {
      "before": ["<leader>", "z"],
      "after": [],
      "commands": [
        {
          // |←
          "when": "!sideBarFocus",
          "command": "workbench.action.focusSideBar",
          "args": []
        }
      ]
    },
    {
      "before": ["<leader>", "m"],
      "after": [],
      "commands": [
        {
          "command": "workbench.action.quickOpen",
          "args": []
        }
      ]
    },
    {
      "before": ["<leader>", "z"],
      "after": [],
      "commands": [
        {
          // |←
          "when": "!sideBarFocus",
          "command": "workbench.action.focusSideBar",
          "args": []
        }
      ]
    }
  ],
  "vim.insertModeKeyBindings": [
    {
      "before": ["j", "j"],
      "after": ["<Esc>"]
    }
  ], // "vim.vimrc.path": "",
  "javascript.validate.enable": false,
  "editor.formatOnSave": true,
  "languageServerHaskell.completionSnippetsOn": true,
  // "languageServerHaskell.hlintOn": true,
  "languageServerHaskell.enableHIE": true,
  "languageServerHaskell.showTypeForSelection.command.location": "dropdown",
  "languageServerHaskell.maxNumberOfProblems": 100,
  // "window.reopenFolders": "all",
  "window.restoreWindows": "all",
  "window.restoreFullscreen": true,
  "editor.renderWhitespace": "boundary",
  "editor.renderIndentGuides": true,
  "workbench.sideBar.location": "right",
  "window.zoomLevel": 0,
  "editor.wordWrap": "wordWrapColumn",
  "editor.wordWrapColumn": 200,
  // "codemetrics.basics.ComplexityLevelExtreme" : 15,
  // "codemetrics.basics.CodeLensHiddenUnder" : 3,
  // "codemetrics.basics.ComplexityLevelExtremeDescription" : "OMG split this up!",
  // "codemetrics.nodeconfiguration.AnyKeyword": 100,
  // "sync.gist": "",
  // "sync.lastUpload": "",
  "sync.autoDownload": false,
  "sync.autoUpload": true,
  // "sync.lastDownload": "",
  // "sync.version": 262,
  // "sync.showSummary": true,
  "sync.forceDownload": false,
  // "sync.anonymousGist": false,
  // "sync.host": "",
  // "sync.pathPrefix": "",
  // "elm.makeCommand": "/usr/local/bin/elm-make",
  // "elm.formatCommand": "elm-format",
  "elm.compiler": "./node_modules/.bin/elm",
  // "elm.makeCommand": "./node_modules/.bin/elm-make",
  "elm.showSuggestionsInElmSyntax": true,
  "[elm]": {
    "editor.formatOnSave": true
  },
  // "elm-format.formatOnSave": true,
  // "tslint.enable": true,
  // "tslint.jsEnable": true,
  // "tslint.run": "onSave",
  "editor.cursorBlinking": "solid",
  "npm.enableScriptExplorer": true,
  "atomKeymap.promptV3Features": true,
  // "editor.formatOnPaste": false,
  // "haskell.hlint.executablePath": "~/.local/bin/hlint",
  // "haskelly.codeCompletion": true,
  // "haskelly.buttons.ghci": true,
  // "haskelly.buttons.runfile": true,
  // "haskelly.buttons.quickcheck": true,
  // "haskelly.buttons.stackRun": true,
  // "haskelly.buttons.stackTest": true,
  // "haskelly.snippets.important": false,
  "haskutil.alignExtensions": true,
  "haskutil.organiseExtensionOnInsert": true,
  "haskutil.supportedExtensions": [
    "BangPatterns",
    "DataKinds",
    "DefaultSignatures",
    "DeriveFunctor",
    "DeriveGeneric",
    "FlexibleContexts",
    "FlexibleInstances",
    "FunctionalDependencies",
    "GADTs",
    "GeneralizedNewtypeDeriving",
    "KindSignatures",
    "MultiParamTypeClasses",
    "NamedFieldPuns",
    "RankNTypes",
    "RecordWildCards",
    "StandaloneDeriving",
    "TemplateHaskell",
    "TupleSections",
    "TypeFamilies",
    "TypeSynonymInstances",
    "UndecidableInstances",
    "TypeApplications",
    "ViewPatterns"
  ],
  "haskutil.sortExtensions": true,
  "haskutil.organiseImportsOnSave": true,
  "haskutil.alignImports": true,
  "haskutil.sortImports": true,
  "haskutil.organiseExtensionOnSave": true,
  "haskell.indentationRules.enabled": true,
  "haskell.hlint.run": "onType",
  "hindent-format.enable": true,
  "hindent-format.command": "hindent",
  "idris.executablePath": "idris",
  "idris.hoverMode": "fallback",
  "idris.suggestMode": "replCompletion",
  "idris.warnPartial": true,
  "idris.showOutputWhenTypechecking": false,
  "auto-run-command.rules": [
    {
      "condition": "hasFile: wallaby.js",
      "command": "wallaby.start",
      "message": "Running wallaby"
    }
  ],
  "editor.minimap.enabled": false,
  "explorer.confirmDragAndDrop": false,
  "terminal.integrated.fontSize": 15,
  // "terminal.integrated.fontFamily": "Fira Code",
  "terminal.integrated.fontFamily": "FiraCode Nerd Font",
  "workbench.startupEditor": "none",
  "purescript.buildCommand": "npm run build:json",
  "purescript.autocompleteAddImport": true,
  "purescript.editorMode": true,
  "purescript.pscIdePort": null,
  "purescript.fastRebuild": true,
  "gitlens.advanced.messages": {
    "suppressShowKeyBindingsNotice": true
  },
  // "gitlens.historyExplorer.enabled": true,
  "gitlens.views.fileHistory.enabled": true,
  "bracketPairColorizer.forceUniqueOpeningColor": true,
  "bracketPairColorizer.colorMode": "Consecutive",
  "breadcrumbs.enabled": false,
  "files.associations": {
    "*.html": "html"
  },
  "files.exclude": {
    "**/._.DS_Store": true
  },
  "editor.foldingStrategy": "indentation",
  "editor.hover.sticky": false,
  "editor.tokenColorCustomizations": {
    "[Monokai High Contrast]": {
      "comments": "#6c06e8",
      "variables": "#e06c75"
    }
  },
  "workbench.list.horizontalScrolling": true,
  "workbench.view.alwaysShowHeaderActions": true,
  "workbench.colorCustomizations": {
    "activityBar.background": "#000000",
    "activityBar.border": "#d3d3d3",
    "input.background": "#000000",
    "terminal.selectionBackground": "#000000",
    "terminal.background": "#000000",
    "activityBarBadge.background": "#000000",
    "sideBar.background": "#000000",
    "sideBar.border": "#d3d3d3",
    "editor.background": "#000000",
    "tab.inactiveBackground": "#000000",
    "panel.border": "#d3d3d3",
    "peekView.border": "#d3d3d3",
    "sideBarSectionHeader.border": "#d3d3d3",
    "menu.selectionBorder": "#d3d3d3",
    "titleBar.border": "#d3d3d3",
    "menubar.selectionBorder": "#d3d3d3",
    "terminal.border": "#d3d3d3",
    "editorGroupHeader.tabsBorder": "#d3d3d3",
    "editorLineNumber.foreground": "#d3d3d3",
    "editorGroupHeader.tabsBackground": "#000000",
    "statusBar.background": "#B48EAD",
    "statusBar.noFolderBackground": "#B48EAD",
    "statusBar.debuggingBackground": "#B48EAD",
    "statusBar.foreground": "#000"
  },
  // "standard.enable": true,
  "eslint.enable": true,
  "eslint.packageManager": "npm",
  // "eslint.options": { "configfile": "~/Desktop/todo-vanilla-js/.eslintrc.json" },
  "git.ignoreMissingGitWarning": true,
  "files.eol": "\r\n",
  "javascript.updateImportsOnFileMove.enabled": "always",
  "workbench.iconTheme": "file-icons",
  "workbench.colorTheme": "Darker than One Dark Pro",
  "[jsonc]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[typescript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "peacock.favoriteColors": [
    {
      "name": "Angular Red",
      "value": "#b52e31"
    },
    {
      "name": "Auth0 Orange",
      "value": "#eb5424"
    },
    {
      "name": "Azure Blue",
      "value": "#007fff"
    },
    {
      "name": "C# Purple",
      "value": "#68217A"
    },
    {
      "name": "Gatsby Purple",
      "value": "#639"
    },
    {
      "name": "Go Cyan",
      "value": "#5dc9e2"
    },
    {
      "name": "Java Blue-Gray",
      "value": "#557c9b"
    },
    {
      "name": "JavaScript Yellow",
      "value": "#f9e64f"
    },
    {
      "name": "Mandalorian Blue",
      "value": "#1857a4"
    },
    {
      "name": "Node Green",
      "value": "#215732"
    },
    {
      "name": "React Blue",
      "value": "#00b3e6"
    },
    {
      "name": "Something Different",
      "value": "#832561"
    },
    {
      "name": "Vue Green",
      "value": "#42b883"
    }
  ],
  "peacock.affectAccentBorders": true,
  "peacock.keepBadgeColor": true,
  "peacock.affectTitleBar": true,
  "peacock.darkenLightenPercentage": 2,
  "[haskell]": {
    "editor.defaultFormatter": "monofon.hindent-format"
  },
  "terminal.integrated.shell.osx": "/bin/zsh",
  "elm.analyseEnabled": true,
  "elm.includeParamsInUserAutocomplete": true,
  "elm.includeUserFunctionDocumentation": true,
  "calva.paredit.defaultKeyMap": "original",
  "material-icon-theme.activeIconPack": "react",
  "explorer.openEditors.visible": 0,
  "workbench.settings.editor": "json",
  "javascript.implicitProjectConfig.checkJs": true
  //     "[html]": {
  //   }
  // "clojure.leinPath": "/usr/local/bin/lein",
  // "clojure.toolsJar": "/Library/Java/JavaVirtualMachines/jdk1.8.0_74.jdk/Contents/Home/lib/tools.jar"
}
